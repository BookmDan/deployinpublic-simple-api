name: Deploy
on: 
  push: 
    branches: [ "main" ]
  
jobs:
  # build:
  #   name: Build Docker Image
  #   runs-on: ubuntu-latest  
  #   steps:  
  #       - name: Checkout
  #         uses: actions/checkout@v2    
  #       - name: Configure AWS Credentials 
  #         uses: aws-actions/configure-aws-credentials@v4
  #         with:
  #           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #           aws-region: ${{secrets.AWS_REGION}}
  #       - name: Log into AWS ECR
  #         id: login-aws-ecr
  #         uses: aws-actions/amazon-ecr-login@v2
  #         with:
  #           region: ${{ secrets.AWS_REGION }}
  #           role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
  #       - name: Build and Push Image to ECR
  #         env:
  #           ECR_REGISTRY: ${{ steps.login-aws-ecr.outputs.registry }}
  #           ECR_REPOSITORY: ${{secrets.AWS_ECR_REPO}}
  #           IMAGE_TAG: latest
  #         run: |
  #           echo "ECR_REGISTRY=${ECR_REGISTRY}"
  #           echo "ECR_REPOSITORY=${ECR_REPOSITORY}"
  #           echo "IMAGE_TAG=${IMAGE_TAG}"
  #           docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
  #           docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
       
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    # needs: build
    steps: 
        - name: Configure AWS Credentials 
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{secrets.AWS_REGION}}
        - name: Log into AWS ECR
          id: login-aws-ecr
          uses: aws-actions/amazon-ecr-login@v2
          with:
            region: ${{ secrets.AWS_REGION }}
            role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        -name: Echo
          run: echo ${{ steps.login-aws-ecr.outputs.registry }}